@use 'variables' as v;

@mixin buttonBgEffects($bg) {
  background-color: $bg;

  &:hover:not(:disabled) {
    @if alpha($bg) == 1 {
      background-color: darken($bg, 10%);
    } @else {
      background-color: lighten($bg, 25%);
    }
  }

  &:active:not(:disabled) {
    @if alpha($bg) == 1 {
      background-color: darken($bg, 15%);
    } @else {
      background-color: lighten($bg, 30%);
    }
  }
}

@mixin buttonOpacityEffects() {
  &:hover {
    filter: opacity(0.8);
  }

  &:active {
    filter: opacity(0.8);
  }
}

@mixin mainCreateButton($bg) {
  @include buttonBgEffects($bg);

  height: 50px;
  display: flex;
  align-items: center;
  text-align: left;
  padding-left: map-get(v.$margins, main);
  font-size: map-get(v.$fontSizes, medium);
  border-radius: v.$primaryBorderRadius;
}

@mixin submitButton {
  @include buttonBgEffects(v.$blue);

  color: white;
  border-radius: v.$sharpBorderRadius;
  font-size: map-get(v.$fontSizes, smallest);

  &:disabled {
    cursor: not-allowed;
    background-color: rgba(#000, 0.5);
    opacity: 0.2;
  }
}

@mixin closeButton($bg) {
  @include buttonBgEffects($bg);

  color: rgba(#000, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: none;
  border-radius: v.$primaryBorderRadius;
}

@mixin iconButton {
  @include buttonBgEffects(v.$transparentDark);

  background: none;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: v.$primaryBorderRadius;
}
